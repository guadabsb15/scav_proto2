name: grade exercise 3

on: 
  workflow_dispatch:
    inputs:
      issue_trig:
        required: true
        type: string
      user:
        required: true
        type: string 

jobs: 

  start_job: 
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"      

      - name: grade ex3
        id: grading
        continue-on-error: true
        run: |
          python -m pip install --upgrade pip
          pip install pytest

          #check if testing branch on this repo has a python test that passes 
          git checkout testing 
          pytest testing/example.py

        env: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

      - name: open issue n+1 when grade is pass
        if: !(failure() && steps.grading.outcome == 'failure')
        run: |
          #get issue title from html_url
          current_ex=$(gh issue view "$ISSUE" --json title --jq ".title")
          echo $current_ex
          current="$current_ex.md"
          
          #find on the exercises directory which is the next exercise__.md file 
          next_ex=$(ls -v exercises| awk -v file=$current 'f==1{print;exit} $0==file{f=1}' )
          echo $next_ex

          next_ex_name=$(basename -s ".md" "$next_ex")
          echo $next_ex_name

          next_file="exercises/${next_ex}"
          echo $next_file

          gh issue create --title "$next_ex_name" --body-file $next_file --repo $GITHUB_REPOSITORY

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE: ${{ inputs.issue_trig }}

      - name: comment on issue if wrong
        if: failure() && steps.integrationTests.outcome == 'failure'
        run: |
          echo $ISSUE        
          gh issue comment $ISSUE --body "$BODY"  
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BODY: Please take a look at your answer
          ISSUE: ${{ inputs.issue_trig }}


      - name: close original issue
        if: !(failure() && steps.grading.outcome == 'failure')
        run: gh issue close $ISSUE
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE: ${{ inputs.issue_trig }}

