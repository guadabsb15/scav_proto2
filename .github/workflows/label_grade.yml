# This is a basic workflow to help you get started with Actions

name: Grade when label grade is assign

# Controls when the workflow will run
on:
  # Triggers the workflow when issue is open 
  issues:
    types: [labeled]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  call_grade:
    if: contains(github.event.issue.labels.*.name, 'grade')
    uses: ./.github/workflows/grade.yml

  build:
    if: contains(github.event.issue.labels.*.name, 'grade') #change to needs?
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: call_grade

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: retrieve grade
        id: grading
          #if: contains(github.event.issue.labels.*.name, 'excercise1')
        run: |
          echo getting grade from previous job

          #create some variable if it is correct?
          echo "correct=no" >> "$GITHUB_OUTPUT"
        

      - name: open issue n+1 when grade is pass
        if: steps.grading.outputs.correct == 'pass'
        run: |
          current_ex=${{ github.event.issue.title }}
          echo $current_ex
          ex_n=$(echo "$current_ex"|grep -Eo "[0-9]+"|head -n1)
          echo $ex_n
          next_ex="exercise$((ex_n+1))"
          echo $next_ex

          next_file="exercises/${next_ex}.md"
          echo $next_file

          gh issue create --title "$next_ex" --body-file $next_file --repo $GITHUB_REPOSITORY

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

                    
      - name: comment on issue if wrong
        if: steps.grading.outputs.correct != 'pass'
        run: gh issue comment $ISSUE --body "$BODY"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE: ${{ github.event.issue.html_url }} 
          BODY: Please take a look at your answer 


          
      - name: close original issue
        if: steps.grading.outputs.correct == 'pass'
        run: gh issue close $ISSUE
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE: ${{ github.event.issue.html_url }}  



     
